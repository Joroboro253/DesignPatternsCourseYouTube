Шаблон: Декоратор (Decorator)
========================================================================================================================================
Цель:

Динамическое добавление альтернативы порождению подклассов для расширения функциональности
========================================================================================================================================

Для чего используется:

Используется в качестве альтернативы порождению для расширения функциональности.

========================================================================================================================================
Пример использования:

- динамическое и понятное клиентам добавление обязанностей объектам;
- реализация обязанностей, которые могут быть сняты с объекта;
- расширение класса путем порождения подклассов невозможно по каким-либо причинам;

========================================================================================================================================